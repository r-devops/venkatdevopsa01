
- name: setup  mysql repo 
  ansible.builtin.copy:
    src: mysql.repo
    dest: /etc/yum.repos.d/

- name: Install mysql
  ansible.builtin.yum:
    name: mysql-community-server
    state: latest

- name: Start mysql 
  ansible.builtin.systemd:
    state: started
    name: mysqld
    enabled: yes 

- name: mysql temporary password  
  ansible.builtin.shell: grep 'A temporary password' /var/log/mysqld.log | awk '{print $NF}'
  register: out 

- name: print out registered variable 
  ansible.builtin.debug:
    msg: "{{out.stdout_lines[-1]}}" 

- name: Check MySQL Credentials
  community.mysql.mysql_info:
    login_user: root
    login_password: "{{ROBOSHOP_MYSQL_PASSWORD}}"
    filter: version
  ignore_errors: yes
  register: mysql_conn_status

- name: mysql temporary password  
  ansible.builtin.shell: mysql_secure_installation -uroot -p"{{ROBOSHOP_MYSQL_PASSWORD}}" < exit.sql 

- name: mysql temporary password  
  ansible.builtin.shell: mysql_secure_installation -uroot -p"{{out.stdout_lines[-1]}}" {{ROBOSHOP_MYSQL_PASSWORD}}

 


# LOG_FILE=/tmp/mysql
# source ./common.sh

# if [ -z "${ROBOSHOP_MYSQL_PASSWORD}" ]; then
#   echo -e "\e[31m ROBOSHOP_MYSQL_PASSWORD env variable is needed\e[0m"
#   exit 1
# fi


# DEFAULT_PASSWORD=$(grep 'A temporary password' /var/log/mysqld.log | awk '{print $NF}')

# echo "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('${ROBOSHOP_MYSQL_PASSWORD}');
# FLUSH PRIVILEGES;" >/tmp/root-pass.sql

# echo "show databases;" |mysql -uroot -p${ROBOSHOP_MYSQL_PASSWORD} &>>$LOG_FILE
# if [ $? -ne 0 ]; then
#   echo "Change the default root password"
#   mysql --connect-expired-password -uroot -p"${DEFAULT_PASSWORD}" </tmp/root-pass.sql &>>$LOG_FILE
#   StatusCheck $?
# fi

# echo 'show plugins'| mysql -uroot -p${ROBOSHOP_MYSQL_PASSWORD} 2>/dev/null | grep validate_password &>>$LOG_FILE
# if [ $? -eq 0 ]; then
#   echo "Uninstall Password Validation Plugin"
#   echo "uninstall plugin validate_password;" | mysql -uroot -p${ROBOSHOP_MYSQL_PASSWORD} &>>$LOG_FILE
#   StatusCheck $?
# fi

# echo "Download Schema"
# curl -s -L -o /tmp/mysql.zip "https://github.com/roboshop-devops-project/mysql/archive/main.zip" &>>$LOG_FILE
# StatusCheck $?

# echo "Extract Schema"
# cd /tmp
# unzip -o mysql.zip &>>$LOG_FILE
# StatusCheck $?

# echo "Load Schema"
# cd mysql-main
# mysql -u root -p${ROBOSHOP_MYSQL_PASSWORD} <shipping.sql &>>$LOG_FILE
# StatusCheck $?
